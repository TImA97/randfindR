% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/aggregate_indices.R
\name{all_rand}
\alias{all_rand}
\title{Compute collection of randomness indices}
\usage{
all_rand(x, options, circ = TRUE, asc = TRUE, indices = NULL, combine = FALSE)
}
\arguments{
\item{x}{data frame or vector containing sequences of options in row-wise format}

\item{options}{number of available options in sequence}

\item{circ}{indicate whether to include wrap around from end to the beginning}

\item{asc}{Indicate whether to compute variance of ascending or descending
runs. Default value is set to ascending.}

\item{indices}{indices of randomness to be computed as character vector}

\item{combine}{indicates whether the computed indices should be combined with
the original data frame.}
}
\value{
vector or data frame containing the selection of randomness indices
}
\description{
Compute collection of randomness indices
}
\details{
This function allows to enter a data frame or vector \code{x} of sequence data and
computes a variety of randomness indices. If \code{x} is a data frame, it is
assumed that the sequences are provided in a row-wise format, i.e., each row
represents one sequence. All columns are included in the analysis.
In this case, the output of the function is also a data frame. If you want
the indices to be appended to your input data frame, you can set
\code{combine} to TRUE.
If \code{x} is a vector all indices are computed normally over said vector.
In this case, the output of the function is also a vector with one value for
each computed index.
The \code{circ} arguments determines whether a wrap around of the last digits
in a sequence to the first digits of a sequence should be included for indices
that are based on computing response pairs. The \code{asc} arguments
determines whether ascending or descending runs should be computed for the
runs index.
The \code{indices} argument lets you specify the randomness indices that you
want to have. By default all indices are computed.
}
\examples{
all_rand(ginsburg1994, 10)
all_rand(evans1978[, 1], 10)
all_rand(evans1978[, 2], 10)

}
